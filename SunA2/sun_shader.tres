[gd_resource type="VisualShader" load_steps=44 format=2]

[sub_resource type="VisualShaderNodeTexture" id=1]
source = 5

[sub_resource type="VisualShaderNodeVectorCompose" id=2]

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=4]

[sub_resource type="VisualShaderNodeInput" id=5]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarUniform" id=6]
uniform_name = "scrollSpeed"

[sub_resource type="VisualShaderNodeScalarOp" id=7]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=8]

[sub_resource type="VisualShaderNodeVectorDecompose" id=9]

[sub_resource type="VisualShaderNodeTexture" id=10]
source = 5

[sub_resource type="VisualShaderNodeVectorDecompose" id=11]

[sub_resource type="VisualShaderNodeVectorCompose" id=12]

[sub_resource type="VisualShaderNodeVectorDecompose" id=13]

[sub_resource type="VisualShaderNodeScalarOp" id=14]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=15]

[sub_resource type="VisualShaderNodeScalarOp" id=16]
default_input_values = [ 0, 0.0, 1, 0.01 ]

[sub_resource type="VisualShaderNodeScalarOp" id=17]
operator = 2

[sub_resource type="VisualShaderNodeVectorCompose" id=18]

[sub_resource type="VisualShaderNodeScalarOp" id=19]
default_input_values = [ 0, 0.0, 1, -1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=20]

[sub_resource type="VisualShaderNodeVectorDecompose" id=21]

[sub_resource type="VisualShaderNodeScalarOp" id=22]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=23]
source = 5

[sub_resource type="VisualShaderNodeVectorOp" id=24]
operator = 2

[sub_resource type="VisualShaderNodeVectorCompose" id=25]

[sub_resource type="VisualShaderNodeExpression" id=26]
size = Vector2( 375.28, 309.84 )
expression = "float inp = input;
if (inp < threshold){
	inp = 1.0;
}
output = inp;"

[sub_resource type="VisualShaderNodeScalarUniform" id=27]
uniform_name = "rimThreshold"

[sub_resource type="VisualShaderNodeTexture" id=28]
source = 5

[sub_resource type="VisualShaderNodeVectorCompose" id=29]

[sub_resource type="VisualShaderNodeGlobalExpression" id=32]
size = Vector2( 250, 150 )
expression = "render_mode unshaded;"

[sub_resource type="VisualShaderNodeScalarOp" id=36]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=37]
uniform_name = "SunGradient"

[sub_resource type="VisualShaderNodeTextureUniform" id=38]
uniform_name = "noise_x5"

[sub_resource type="VisualShaderNodeTextureUniform" id=39]
uniform_name = "noise_x10"

[sub_resource type="VisualShaderNodeScalarUniform" id=40]
uniform_name = "EmissionStrength"

[sub_resource type="VisualShaderNodeVectorOp" id=41]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=42]
uniform_name = "BlinkingSpeed"

[sub_resource type="VisualShaderNodeScalarFunc" id=43]
function = 1

[sub_resource type="VisualShaderNodeInput" id=44]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=45]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=46]
default_input_values = [ 0, 0.0, 1, 1.0 ]

[sub_resource type="VisualShaderNodeScalarOp" id=47]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarOp" id=48]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform float scrollSpeed;
uniform sampler2D noise_x5;
uniform sampler2D tex_frg_36;
uniform sampler2D noise_x10;
uniform float rimThreshold;
uniform sampler2D SunGradient;
uniform float EmissionStrength;
uniform float BlinkingSpeed;


// GlobalExpression:0
	render_mode unshaded;

void vertex() {
// Output:0

}

void fragment() {
// Input:18
	vec3 n_out18p0 = vec3(UV, 0.0);

// VectorDecompose:19
	float n_out19p0 = n_out18p0.x;
	float n_out19p1 = n_out18p0.y;
	float n_out19p2 = n_out18p0.z;

// Input:20
	float n_out20p0 = TIME;

// ScalarUniform:21
	float n_out21p0 = scrollSpeed;

// ScalarOp:22
	float n_out22p0 = n_out20p0 * n_out21p0;

// ScalarOp:23
	float n_out23p0 = n_out19p0 + n_out22p0;

// VectorCompose:17
	float n_in17p2 = 0.00000;
	vec3 n_out17p0 = vec3(n_out23p0, n_out19p1, n_in17p2);

// Texture:16
	vec3 n_out16p0;
	float n_out16p1;
	{
		vec4 noise_x5_tex_read = texture(noise_x5, n_out17p0.xy);
		n_out16p0 = noise_x5_tex_read.rgb;
		n_out16p1 = noise_x5_tex_read.a;
	}

// VectorDecompose:24
	float n_out24p0 = n_out16p0.x;
	float n_out24p1 = n_out16p0.y;
	float n_out24p2 = n_out16p0.z;

// VectorDecompose:28
	float n_out28p0 = n_out18p0.x;
	float n_out28p1 = n_out18p0.y;
	float n_out28p2 = n_out18p0.z;

// ScalarOp:31
	float n_in31p1 = 0.01000;
	float n_out31p0 = n_out21p0 + n_in31p1;

// ScalarOp:29
	float n_out29p0 = n_out20p0 * n_out31p0;

// ScalarOp:35
	float n_in35p1 = -1.00000;
	float n_out35p0 = n_out29p0 * n_in35p1;

// ScalarOp:30
	float n_out30p0 = n_out28p0 + n_out35p0;

// VectorCompose:27
	float n_in27p2 = 0.00000;
	vec3 n_out27p0 = vec3(n_out30p0, n_out28p1, n_in27p2);

// Texture:25
	vec3 n_out25p0;
	float n_out25p1;
	{
		vec4 noise_x5_tex_read = texture(noise_x5, n_out27p0.xy);
		n_out25p0 = noise_x5_tex_read.rgb;
		n_out25p1 = noise_x5_tex_read.a;
	}

// VectorDecompose:26
	float n_out26p0 = n_out25p0.x;
	float n_out26p1 = n_out25p0.y;
	float n_out26p2 = n_out25p0.z;

// ScalarOp:33
	float n_out33p0 = n_out24p0 * n_out26p0;

// VectorCompose:41
	vec3 n_out41p0 = vec3(n_out33p0, n_out33p0, n_out33p0);

// Texture:36
	vec4 tex_frg_36_read = texture(tex_frg_36, UV.xy);
	vec3 n_out36p0 = tex_frg_36_read.rgb;
	float n_out36p1 = tex_frg_36_read.a;

// VectorDecompose:37
	float n_out37p0 = n_out36p0.x;
	float n_out37p1 = n_out36p0.y;
	float n_out37p2 = n_out36p0.z;

// ScalarOp:38
	float n_out38p0 = n_out33p0 * n_out37p0;

// VectorCompose:34
	float n_in34p2 = 0.00000;
	vec3 n_out34p0 = vec3(n_out38p0, n_out38p0, n_in34p2);

// Texture:39
	vec3 n_out39p0;
	float n_out39p1;
	{
		vec4 noise_x10_tex_read = texture(noise_x10, n_out34p0.xy);
		n_out39p0 = noise_x10_tex_read.rgb;
		n_out39p1 = noise_x10_tex_read.a;
	}

// VectorOp:40
	vec3 n_out40p0 = n_out41p0 * n_out39p0;

// ScalarOp:50
	float n_in50p1 = 2.00000;
	float n_out50p0 = dot(n_out40p0, vec3(0.333333, 0.333333, 0.333333)) * n_in50p1;

// ScalarUniform:43
	float n_out43p0 = rimThreshold;

// Expression:42
	float n_out42p0;
	n_out42p0 = 0.0;
	{
		float inp = n_out50p0;
		if (inp < n_out43p0){
			inp = 1.0;
		}
		n_out42p0 = inp;
	}

// VectorCompose:45
	float n_in45p2 = 0.00000;
	vec3 n_out45p0 = vec3(n_out42p0, n_out42p0, n_in45p2);

// Texture:44
	vec3 n_out44p0;
	float n_out44p1;
	{
		vec4 SunGradient_tex_read = texture(SunGradient, n_out45p0.xy);
		n_out44p0 = SunGradient_tex_read.rgb;
		n_out44p1 = SunGradient_tex_read.a;
	}

// ScalarUniform:54
	float n_out54p0 = EmissionStrength;

// Input:58
	float n_out58p0 = TIME;

// ScalarUniform:56
	float n_out56p0 = BlinkingSpeed;

// ScalarOp:59
	float n_out59p0 = n_out58p0 * n_out56p0;

// ScalarFunc:57
	float n_out57p0 = cos(n_out59p0);

// ScalarOp:60
	float n_in60p1 = 1.00000;
	float n_out60p0 = n_out57p0 + n_in60p1;

// ScalarOp:61
	float n_in61p1 = 2.00000;
	float n_out61p0 = n_out60p0 / n_in61p1;

// ScalarOp:62
	float n_out62p0 = n_out54p0 * n_out61p0;

// VectorOp:55
	vec3 n_out55p0 = n_out44p0 * vec3(n_out62p0);

// Output:0
	ALBEDO = n_out44p0;
	EMISSION = n_out55p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -998.36, -5.80333 )
nodes/fragment/0/position = Vector2( 3220, 100 )
nodes/fragment/16/node = SubResource( 1 )
nodes/fragment/16/position = Vector2( -200, 120 )
nodes/fragment/17/node = SubResource( 2 )
nodes/fragment/17/position = Vector2( -480, 160 )
nodes/fragment/18/node = SubResource( 3 )
nodes/fragment/18/position = Vector2( -1220, 120 )
nodes/fragment/19/node = SubResource( 4 )
nodes/fragment/19/position = Vector2( -960, 120 )
nodes/fragment/20/node = SubResource( 5 )
nodes/fragment/20/position = Vector2( -1240, 240 )
nodes/fragment/21/node = SubResource( 6 )
nodes/fragment/21/position = Vector2( -1240, 320 )
nodes/fragment/22/node = SubResource( 7 )
nodes/fragment/22/position = Vector2( -900, 240 )
nodes/fragment/23/node = SubResource( 8 )
nodes/fragment/23/position = Vector2( -700, 220 )
nodes/fragment/24/node = SubResource( 9 )
nodes/fragment/24/position = Vector2( -20, 240 )
nodes/fragment/25/node = SubResource( 10 )
nodes/fragment/25/position = Vector2( -200, 360 )
nodes/fragment/26/node = SubResource( 11 )
nodes/fragment/26/position = Vector2( 20, 480 )
nodes/fragment/27/node = SubResource( 12 )
nodes/fragment/27/position = Vector2( -460, 440 )
nodes/fragment/28/node = SubResource( 13 )
nodes/fragment/28/position = Vector2( -920, 420 )
nodes/fragment/29/node = SubResource( 14 )
nodes/fragment/29/position = Vector2( -1040, 560 )
nodes/fragment/30/node = SubResource( 15 )
nodes/fragment/30/position = Vector2( -660, 460 )
nodes/fragment/31/node = SubResource( 16 )
nodes/fragment/31/position = Vector2( -1240, 560 )
nodes/fragment/33/node = SubResource( 17 )
nodes/fragment/33/position = Vector2( 304.368, 317.028 )
nodes/fragment/34/node = SubResource( 18 )
nodes/fragment/34/position = Vector2( 980, 460 )
nodes/fragment/35/node = SubResource( 19 )
nodes/fragment/35/position = Vector2( -860, 560 )
nodes/fragment/36/node = SubResource( 20 )
nodes/fragment/36/position = Vector2( 240, 580 )
nodes/fragment/37/node = SubResource( 21 )
nodes/fragment/37/position = Vector2( 460, 540 )
nodes/fragment/38/node = SubResource( 22 )
nodes/fragment/38/position = Vector2( 787.999, 468.274 )
nodes/fragment/39/node = SubResource( 23 )
nodes/fragment/39/position = Vector2( 1200, 340 )
nodes/fragment/40/node = SubResource( 24 )
nodes/fragment/40/position = Vector2( 1380, 240 )
nodes/fragment/41/node = SubResource( 25 )
nodes/fragment/41/position = Vector2( 540, 280 )
nodes/fragment/42/node = SubResource( 26 )
nodes/fragment/42/position = Vector2( 1760, 280 )
nodes/fragment/42/size = Vector2( 375.28, 309.84 )
nodes/fragment/42/input_ports = "0,0,input;1,0,threshold;"
nodes/fragment/42/output_ports = "0,0,output;"
nodes/fragment/42/expression = "float inp = input;
if (inp < threshold){
	inp = 1.0;
}
output = inp;"
nodes/fragment/43/node = SubResource( 27 )
nodes/fragment/43/position = Vector2( 1540, 400 )
nodes/fragment/44/node = SubResource( 28 )
nodes/fragment/44/position = Vector2( 2560, 100 )
nodes/fragment/45/node = SubResource( 29 )
nodes/fragment/45/position = Vector2( 2260, 160 )
nodes/fragment/46/node = SubResource( 32 )
nodes/fragment/46/position = Vector2( 1920, 40 )
nodes/fragment/46/size = Vector2( 250, 150 )
nodes/fragment/46/input_ports = ""
nodes/fragment/46/output_ports = ""
nodes/fragment/46/expression = "render_mode unshaded;"
nodes/fragment/50/node = SubResource( 36 )
nodes/fragment/50/position = Vector2( 1600, 260 )
nodes/fragment/51/node = SubResource( 37 )
nodes/fragment/51/position = Vector2( 2240, -40 )
nodes/fragment/52/node = SubResource( 38 )
nodes/fragment/52/position = Vector2( -480, -40 )
nodes/fragment/53/node = SubResource( 39 )
nodes/fragment/53/position = Vector2( 900, 100 )
nodes/fragment/54/node = SubResource( 40 )
nodes/fragment/54/position = Vector2( 2520, 320 )
nodes/fragment/55/node = SubResource( 41 )
nodes/fragment/55/position = Vector2( 2960, 200 )
nodes/fragment/56/node = SubResource( 42 )
nodes/fragment/56/position = Vector2( 1840, 860 )
nodes/fragment/57/node = SubResource( 43 )
nodes/fragment/57/position = Vector2( 2300, 660 )
nodes/fragment/58/node = SubResource( 44 )
nodes/fragment/58/position = Vector2( 1860, 780 )
nodes/fragment/59/node = SubResource( 45 )
nodes/fragment/59/position = Vector2( 2100, 760 )
nodes/fragment/60/node = SubResource( 46 )
nodes/fragment/60/position = Vector2( 2500, 660 )
nodes/fragment/61/node = SubResource( 47 )
nodes/fragment/61/position = Vector2( 2700, 660 )
nodes/fragment/62/node = SubResource( 48 )
nodes/fragment/62/position = Vector2( 2800, 360 )
nodes/fragment/connections = PoolIntArray( 18, 0, 19, 0, 20, 0, 22, 0, 21, 0, 22, 1, 22, 0, 23, 1, 19, 0, 23, 0, 23, 0, 17, 0, 19, 1, 17, 1, 16, 0, 24, 0, 25, 0, 26, 0, 28, 0, 30, 0, 30, 0, 27, 0, 28, 1, 27, 1, 21, 0, 31, 0, 18, 0, 28, 0, 24, 0, 33, 0, 26, 0, 33, 1, 31, 0, 29, 1, 29, 0, 35, 0, 35, 0, 30, 1, 27, 0, 25, 0, 20, 0, 29, 0, 17, 0, 16, 0, 36, 0, 37, 0, 37, 0, 38, 1, 33, 0, 38, 0, 38, 0, 34, 0, 38, 0, 34, 1, 34, 0, 39, 0, 39, 0, 40, 1, 33, 0, 41, 0, 33, 0, 41, 1, 33, 0, 41, 2, 41, 0, 40, 0, 43, 0, 42, 1, 42, 0, 45, 0, 45, 0, 44, 0, 42, 0, 45, 1, 44, 0, 0, 0, 40, 0, 50, 0, 50, 0, 42, 0, 51, 2, 44, 2, 52, 2, 16, 2, 52, 2, 25, 2, 53, 2, 39, 2, 44, 0, 55, 0, 55, 0, 0, 5, 56, 0, 59, 1, 58, 0, 59, 0, 59, 0, 57, 0, 57, 0, 60, 0, 60, 0, 61, 0, 61, 0, 62, 1, 54, 0, 62, 0, 62, 0, 55, 1 )
