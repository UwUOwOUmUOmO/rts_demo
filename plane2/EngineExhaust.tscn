[gd_scene load_steps=16 format=2]

[ext_resource path="res://plane2/smoke_ex.tres" type="Texture" id=1]
[ext_resource path="res://particles/PNG (Transparent)/fire_01.png" type="Texture" id=2]
[ext_resource path="res://plane2/JetPlume.tscn" type="PackedScene" id=3]
[ext_resource path="res://plane2/EngineExhaust.gd" type="Script" id=4]

[sub_resource type="Shader" id=12]
code = "// NOTE: Shader automatically converted from Godot Engine 3.5.stable's SpatialMaterial.

shader_type spatial;
render_mode async_visible,blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float specular;
uniform float metallic;
uniform float roughness : hint_range(0,1);
uniform float point_size : hint_range(0,128);
uniform highp float alpha_reduction_percentage : hint_range(0.001, 0.999) = 0.6;
uniform float alpha_reduction_speed : hint_range(0.01, 100.0) = 1.0;
uniform int particles_anim_h_frames;
uniform int particles_anim_v_frames;
uniform bool particles_anim_loop;
uniform float start_usec = 0;
uniform sampler2D texture_emission : hint_black_albedo;
uniform vec4 emission : hint_color;
uniform float emission_energy;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
	mat4 mat_world = mat4(normalize(CAMERA_MATRIX[0])*length(WORLD_MATRIX[0]),normalize(CAMERA_MATRIX[1])*length(WORLD_MATRIX[0]),normalize(CAMERA_MATRIX[2])*length(WORLD_MATRIX[2]),WORLD_MATRIX[3]);
	mat_world = mat_world * mat4( vec4(cos(INSTANCE_CUSTOM.x),-sin(INSTANCE_CUSTOM.x), 0.0, 0.0), vec4(sin(INSTANCE_CUSTOM.x), cos(INSTANCE_CUSTOM.x), 0.0, 0.0),vec4(0.0, 0.0, 1.0, 0.0),vec4(0.0, 0.0, 0.0, 1.0));
	MODELVIEW_MATRIX = INV_CAMERA_MATRIX * mat_world;
	float h_frames = float(particles_anim_h_frames);
	float v_frames = float(particles_anim_v_frames);
	float particle_total_frames = float(particles_anim_h_frames * particles_anim_v_frames);
	float particle_frame = floor(INSTANCE_CUSTOM.z * float(particle_total_frames));
	if (!particles_anim_loop) {
		particle_frame = clamp(particle_frame, 0.0, particle_total_frames - 1.0);
	} else {
		particle_frame = mod(particle_frame, particle_total_frames);
	}	UV /= vec2(h_frames, v_frames);
	UV += vec2(mod(particle_frame, h_frames) / h_frames, floor((particle_frame + 0.5) / h_frames) / v_frames);
}




void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	albedo_tex *= COLOR;
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	METALLIC = metallic;
	ROUGHNESS = roughness;
	SPECULAR = specular;
	vec3 emission_tex = texture(texture_emission,base_uv).rgb;
	float flutter_alpha = (sin(TIME * alpha_reduction_speed + start_usec) + 1.0) / 2.0;
	float fluctuation_period = 1.0 - alpha_reduction_percentage;
	float actual_alpha = alpha_reduction_percentage + (flutter_alpha * fluctuation_period);
	ALPHA = (albedo.a * albedo_tex.a) * actual_alpha;
	EMISSION = (emission.rgb+emission_tex)*emission_energy * actual_alpha;
}
"

[sub_resource type="ShaderMaterial" id=13]
render_priority = 1
shader = SubResource( 12 )
shader_param/albedo = Color( 1, 1, 1, 1 )
shader_param/specular = 0.5
shader_param/metallic = 0.0
shader_param/roughness = 1.0
shader_param/point_size = 1.0
shader_param/alpha_reduction_percentage = 0.48
shader_param/alpha_reduction_speed = 40.0
shader_param/particles_anim_h_frames = 1
shader_param/particles_anim_v_frames = 1
shader_param/particles_anim_loop = false
shader_param/start_usec = 0.0
shader_param/emission = Color( 0.760784, 0.435294, 0.133333, 1 )
shader_param/emission_energy = 4.45
shader_param/uv1_scale = Vector3( 1, 1, 1 )
shader_param/uv1_offset = Vector3( 0, 0, 0 )
shader_param/uv2_scale = Vector3( 1, 1, 1 )
shader_param/uv2_offset = Vector3( 0, 0, 0 )
shader_param/texture_albedo = ExtResource( 2 )

[sub_resource type="Gradient" id=2]
offsets = PoolRealArray( 0, 0.0792079, 0.471947, 1 )
colors = PoolColorArray( 0.270588, 0.262745, 0.262745, 1, 0.109804, 0.105882, 0.105882, 1, 0.109804, 0.105882, 0.105882, 1, 0, 0, 0, 0 )

[sub_resource type="GradientTexture" id=3]
gradient = SubResource( 2 )
width = 10

[sub_resource type="Curve" id=5]
resource_local_to_scene = true
_data = [ Vector2( 0, 1 ), 0.0, 0.0, 0, 0, Vector2( 0.205521, 0.778409 ), -0.189169, -0.189169, 0, 0, Vector2( 1, 0 ), 0.0, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=6]
width = 100
curve = SubResource( 5 )

[sub_resource type="ParticlesMaterial" id=7]
direction = Vector3( 0, 0, 1 )
spread = 3.0
gravity = Vector3( 0, 0, 0 )
initial_velocity = 200.0
initial_velocity_random = 1.0
angular_velocity = 100.0
angular_velocity_random = 1.0
angle = 720.0
angle_random = 1.0
scale = 7.0
scale_curve = SubResource( 6 )
color = Color( 1, 1, 1, 0.588235 )
color_ramp = SubResource( 3 )

[sub_resource type="SpatialMaterial" id=8]
render_priority = 1
flags_transparent = true
flags_unshaded = true
vertex_color_use_as_albedo = true
params_billboard_mode = 3
particles_anim_h_frames = 1
particles_anim_v_frames = 1
particles_anim_loop = false
albedo_texture = ExtResource( 2 )

[sub_resource type="Curve" id=10]
max_value = 100.0
_data = [ Vector2( 0, 1 ), 0.0, 105.329, 0, 0, Vector2( 1, 100 ), 433.961, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=11]
width = 100
curve = SubResource( 10 )

[sub_resource type="ParticlesMaterial" id=9]
direction = Vector3( 0, 0, 1 )
spread = 2.0
gravity = Vector3( 0, 0, 0 )
initial_velocity = 40.0
initial_velocity_random = 0.3
angular_velocity = 100.0
angular_velocity_random = 1.0
damping = 1.0
damping_random = 1.0
damping_curve = SubResource( 11 )
angle = 720.0
angle_random = 1.0
scale = 60.0
scale_random = 1.0
scale_curve = ExtResource( 1 )
color = Color( 1, 1, 1, 0.192157 )
color_ramp = SubResource( 3 )

[node name="EngineExhaust" type="Spatial"]
script = ExtResource( 4 )

[node name="JetPlume" parent="." instance=ExtResource( 3 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.01, 0 )
material_override = SubResource( 13 )
cast_shadow = 0
amount = 30
lifetime = 0.1
process_material = SubResource( 7 )

[node name="SmokeExhaust" parent="." instance=ExtResource( 3 )]
material_override = SubResource( 8 )
cast_shadow = 0
amount = 700
lifetime = 3.0
visibility_aabb = AABB( -2500, -250, -2500, 5000, 500, 5000 )
local_coords = false
process_material = SubResource( 9 )
